name: CI
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 0 * * 1'
jobs:
  windows-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: switch docker
        run: dir C:\
      - name: Assemble
        uses: gradle/gradle-build-action@v2.3.3
        with:
          cache-read-only: false
          arguments: |
            assemble
      - name: Test
        uses: gradle/gradle-build-action@v2.3.3
        with:
          cache-read-only: false
          arguments: |
            check 
            -i 
            -PintegrationTestGradleVersions=7.6
      - name: 'Upload test Artifact'
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-result
          path: D:/a/alfresco-docker-gradle-plugin/**/build/reports/tests
          retention-days: 2
#  integration-test:
#    name: "integration-test (gradle-versions=${{ matrix.gradle-versions}})"
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        gradle-versions:
#          - 6.2,6.3,6.4
#          - 6.5,6.6,6.7
#          - 6.8,6.9,7.0
#          - 7.1,7.2,7.3
#          - 7.4,7.5,7.6
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Pull docker images
#        run: 'parallel docker pull -- alfresco/alfresco-content-repository-community:6.0.7-ga tomcat:7-jre8 hello-world alpine:edge'
#      - name: Check
#        run: ./gradlew check -PintegrationTestGradleVersions=${{ matrix.gradle-versions }}
#      - name: Upload reports
#        if: ${{ failure() }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: reports-integration-test-${{ matrix.gradle-versions }}
#          path: build/reports
#  build:
#    name: "build"
#    needs: [ windows-test , integration-test ]
#    runs-on: ubuntu-latest
#    env:
#      TEST_GRADLE_VERSION: 6.7
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Pull docker images
#        run: 'parallel docker pull -- xenit/alfresco-repository-skeleton:6.0 alfresco/alfresco-content-repository-community:6.0.7-ga tomcat:7-jre8 hello-world alpine:edge'
#      - name: Check
#        run: ./gradlew check -PintegrationTestGradleVersions=$TEST_GRADLE_VERSION
#      - name: Upload reports
#        if: ${{ failure() }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: reports-build
#          path: build/reports
#      - name: Upload analysis to sonarcloud
#        if: "${{ env.SONAR_TOKEN != '' }}"
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          GITHUB_TOKEN: ${{ github.token }}
#        run: ./gradlew sonarqube -Dsonar.projectKey=xenit-eu_alfresco-docker-gradle-plugin -Dsonar.organization=xenit-eu -Dsonar.host.url=https://sonarcloud.io -PintegrationTestGradleVersions=$TEST_GRADLE_VERSION
#      - name: Publish
#        if: ${{ startsWith(github.ref, 'refs/tags/') }}
#        env:
#          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PLUGINS_PUBLISH_KEY }}
#          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PLUGINS_PUBLISH_SECRET }}
#        run: ./gradlew publishPlugins -Pgradle.publish.key=$GRADLE_PUBLISH_KEY -Pgradle.publish.secret=$GRADLE_PUBLISH_SECRET